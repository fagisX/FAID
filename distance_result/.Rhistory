categorical_col = 7:12
inter_data = data.frame(matrix(0, nrow = dim(left_df_gross)[1], ncol= 0))
inter_name = c()
for(i in numeric_col){
name1 = colnames(num_cat_selected)[i]
for(j in categorical_col){
name2 = colnames(num_cat_selected)[j]
new_name = paste("inter", name1, name2, sep = "_")
inter_name = c(inter_name, new_name)
new_col = num_cat_selected[i] * num_cat_selected[j]
inter_data = cbind(inter_data, new_col)
}
}
colnames(inter_data) = inter_name
num_cat_new = cbind(num_cat_selected, inter_data)
# run a lm model on it
lm_model_5 = lm(Gross~., data = num_cat_new)
# then only select the significant columns(***)
num_cat_new_selected = num_cat_new[, (summary(lm_model_5)$coefficients[, 4] < 0.001)]
num_cat_new_selected = cbind(num_cat_new_selected, Gross = left_df_gross$Gross)
final_rmse = vector(length=3)
for(i in 0:18){
percent = 0.05 + i * 0.05
each_rmse = calculate_RMSE_mean(num_cat_new_selected, iter = 100, percent = percent)
each_rmse = c(percent, each_rmse)
final_rmse = rbind(final_rmse, each_rmse)
}
final_rmse = final_rmse[-1, ]
colnames(final_rmse) = c("train_percent", "train", "test")
rownames(final_rmse) = NULL
final_rmse = as.data.frame(final_rmse)
print(paste("the best rmse for train set with transformed categorical variable is:", min(final_rmse$train), sep = " "))
print(paste("the best rmse for test set with only transformed categorical variable is:", min(final_rmse$test), sep = " "))
final_rmse$train_percent = factor(as.character(final_rmse$train_percent))
head(final_rmse)
melt_rmse <- melt(final_rmse, id = "train_percent")
colnames(melt_rmse) = c("train_percentage", "variable", "rmse")
ggplot(melt_rmse,
aes(x = train_percentage, y=rmse, color = variable)) +
geom_point() +
ggtitle("Compare model rmse with different percentage of training data on non-numerical varible")
load('movies_merged')
library(ggplot2)
library(reshape2)
library(caret)
library(tm)
library(dplyr)
library(topicmodels)
library(tidyr)
library(SnowballC)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep='\t')
df
g = graph.data.frame(df)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
df
df.shape
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 2.2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.4) / max(log(E(g2)$weight)+.4)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
plot(g2, layout=layout1)
df
df = df[(df[,"X2"]>=0) $$ (df[,"X2"]<=500)]
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = df[(df[,"from"]>=0) $$ (df[,"from"]<=500)]
df = df[(df[,"from"]>=0) && (df[,"from"]<=500)]
df
df = df[(df[,"from"]>=0) && (df[,"from"]<=100)]
df
df = df[(df[,"to"]>=0) && (df[,"to"]<=100)]
df
df = df[(df[,"from"]>=0) & (df[,"from"]<=100)]
df = df[(df[,"to"]>=0) & (df[,"to"]<=100)]
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = df[(df[,"from"]>=0) & (df[,"from"]<=100)]
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = df[(df[,"from"]>=0) & (df[,"from"]<=100)]
df = df[(df$from>=0) & (df$from<=100)]
df
df.names
df.colnames
df = subset(df, from <=100)
df
df = subset(df, to <=100)
df
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 2.2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.4) / max(log(E(g2)$weight)+.4)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = subset(df, from <=50)
df = subset(df, to <=50)
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 2.2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.4) / max(log(E(g2)$weight)+.4)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = subset(df, from <=10)
df = subset(df, to <=10)
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 2.2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.4) / max(log(E(g2)$weight)+.4)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = subset(df, from <=50)
df = subset(df, to <=50)
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 2.2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.01) / max(log(E(g2)$weight)+.01)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = subset(df, from <=15)
df = subset(df, to <=15)
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 2.2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.01) / max(log(E(g2)$weight)+.01)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = subset(df, from <=15)
df = subset(df, to <=15)
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 2.2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.01) / max(log(E(g2)$weight)+.01)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1, edge.arrow.size=0.5)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = subset(df, from <=15)
df = subset(df, to <=15)
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 2.2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.01) / max(log(E(g2)$weight)+.01)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1, edge.arrow.size=0.2)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = subset(df, from <=15)
df = subset(df, to <=15)
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 2.2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.04) / max(log(E(g2)$weight)+.04)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1, edge.arrow.size=0.2)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = subset(df, from <=15)
df = subset(df, to <=15)
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$vertex.size = 2.2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.04) / max(log(E(g2)$weight)+.04)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1, edge.arrow.size=0.2)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = subset(df, from <=15)
df = subset(df, to <=15)
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 2.2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.04) / max(log(E(g2)$weight)+.04)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1, edge.arrow.size=0.2, vertex.size=2.2 * V(g2)$degree / max(V(g2)$degree)+ .2)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = subset(df, from <=15)
df = subset(df, to <=15)
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 2.2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.04) / max(log(E(g2)$weight)+.04)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1, edge.arrow.size=0.2, vertex.size=2.2 * V(g2)$degree)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = subset(df, from <=15)
df = subset(df, to <=15)
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 2.2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.04) / max(log(E(g2)$weight)+.04)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1, edge.arrow.size=0.2, vertex.size=4 * V(g2)$degree)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = subset(df, from <=30)
df = subset(df, to <=30)
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 2.2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.04) / max(log(E(g2)$weight)+.04)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1, edge.arrow.size=0.2, vertex.size=4 * V(g2)$degree)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = subset(df, from <=30)
df = subset(df, to <=30)
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 1.2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.04) / max(log(E(g2)$weight)+.04)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1, edge.arrow.size=0.2, vertex.size=2 * V(g2)$degree)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = subset(df, from <=20)
df = subset(df, to <=20)
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 1.2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.04) / max(log(E(g2)$weight)+.04)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1, edge.arrow.size=0.2, vertex.size=2 * V(g2)$degree)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = subset(df, from <=20)
df = subset(df, to <=20)
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.04) / max(log(E(g2)$weight)+.04)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1, edge.arrow.size=0.2, vertex.size=2 * V(g2)$degree)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = subset(df, from <=20)
df = subset(df, to <=20)
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.04) / max(log(E(g2)$weight)+.04)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1, edge.arrow.size=0.2, vertex.size=3 * V(g2)$degree)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = subset(df, from <=15)
df = subset(df, to <=15)
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 2 * V(g2)$degree / max(V(g2)$degree)+ .2
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.04) / max(log(E(g2)$weight)+.04)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1, edge.arrow.size=0.2, vertex.size=3 * V(g2)$degree)
library('igraph')
df = read.csv2('email-Eu-core.txt', sep=' ')
colnames(df) = c('from', 'to')
df = subset(df, from <=15)
df = subset(df, to <=15)
g = graph.data.frame(df)
g_aj =get.adjacency(g,sparse=FALSE)
g1 = graph.adjacency(g_aj, weighted=T, mode = "directed")
g2 = simplify(g1)
V(g2)$label = V(g2)$name
V(g2)$degree = degree(g2)
set.seed(9000)
layout1 = layout.fruchterman.reingold(g2)
V(g2)$label.cex = 2 * V(g2)$degree / max(V(g2)$degree)+ .5
V(g2)$label.color = rgb(0, 0, .2, .8)
V(g2)$frame.color = NA
egam = (log(E(g2)$weight)+.04) / max(log(E(g2)$weight)+.04)
E(g2)$color = rgb(.5, .5, 0, egam)
E(g2)$width = egam
plot(g2, layout=layout1, edge.arrow.size=0.2, vertex.size=3 * V(g2)$degree)
x=  100
y= 200
z=  300
t=  200000
Convictions <-
matrix(c(x,y , z, t),
nrow = 2,
dimnames =
list(c("true TS", "noTS"),
c("predicted TS", "Not predicted")))
Convictions
result.fish=fisher.test(Convictions, alternative = "greater")
result.fish$p.value
fisher.test(Convictions, alternative = "greater")
setwd('/Users/boxia/PycharmProjects/Yeast_Greg/distance_result')
df = read.csv('TEL_boxplot_distance.txt', sep='\t')
wilcox.test(df$NI, df$NC, alternative="less")$p.value
wilcox.test(df$XRI, df$RC, alternative="less")$p.value
df
df = read.csv('TEL_boxplot_distance.txt', sep='\t')
wilcox.test(df$NI, df$NC, alternative="less")$p.value
wilcox.test(df$RI, df$RC, alternative="less")$p.value
df = read.csv('TEL_boxplot_distance.txt', sep='\t')
wilcox.test(df$NI, df$NC)$p.value
wilcox.test(df$RI, df$RC)$p.value
